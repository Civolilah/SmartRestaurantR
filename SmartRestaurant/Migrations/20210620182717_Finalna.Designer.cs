// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartRestaurant.DbContext;

namespace SmartRestaurant.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20210620182717_Finalna")]
    partial class Finalna
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartRestaurant.Model.JedinicaKolicine", b =>
                {
                    b.Property<int>("JedinicaKolicineID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivJedinice");

                    b.HasKey("JedinicaKolicineID");

                    b.ToTable("JedinicaKolicine");
                });

            modelBuilder.Entity("SmartRestaurant.Model.KategorijaProizvoda", b =>
                {
                    b.Property<int>("KategorijaProizvodaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivKategorije");

                    b.HasKey("KategorijaProizvodaID");

                    b.ToTable("KategorijaProizvoda");
                });

            modelBuilder.Entity("SmartRestaurant.Model.Korisnici", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivKorisnika");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PasswordSalt");

                    b.HasKey("KorisnikID");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("SmartRestaurant.Model.KorisnikNarudzba", b =>
                {
                    b.Property<int>("NarudzbaKorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikID");

                    b.Property<int>("NarudzbaID");

                    b.HasKey("NarudzbaKorisnikID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("NarudzbaID");

                    b.ToTable("KorisnikNarudzba");
                });

            modelBuilder.Entity("SmartRestaurant.Model.KorisnikOcjena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisniciID");

                    b.Property<int>("Ocjena");

                    b.Property<int>("ProizvodID");

                    b.HasKey("ID");

                    b.HasIndex("KorisniciID");

                    b.HasIndex("ProizvodID");

                    b.ToTable("KorisnikOcjena");
                });

            modelBuilder.Entity("SmartRestaurant.Model.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisniciID");

                    b.Property<int>("UlogeID");

                    b.HasKey("KorisnikUlogaID");

                    b.HasIndex("KorisniciID");

                    b.HasIndex("UlogeID");

                    b.ToTable("KorisnikUloga");
                });

            modelBuilder.Entity("SmartRestaurant.Model.MjestoPosluzivanja", b =>
                {
                    b.Property<int>("MjestoPosluzivanjaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojMjestaPosluzivanja");

                    b.HasKey("MjestoPosluzivanjaID");

                    b.ToTable("MjestoPosluzivanja");
                });

            modelBuilder.Entity("SmartRestaurant.Model.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresaNarucioca");

                    b.Property<string>("BrojTelefonaNarucioca");

                    b.Property<string>("ImeNarucioca");

                    b.Property<int>("MjestoPosluzivanjaID");

                    b.Property<int>("NarudzbaDetaljiID");

                    b.Property<string>("NazivNarudzbe");

                    b.Property<bool>("Prihvacena");

                    b.Property<bool>("PrihvacenaNotifikacija");

                    b.Property<bool>("PromjenaStatusa");

                    b.Property<int>("StatusNarudzbeID");

                    b.Property<DateTime>("VrijemeKreiranjaNarudzbe");

                    b.Property<DateTime>("VrijemeOdgovoraNaNarudzbu");

                    b.HasKey("NarudzbaID");

                    b.HasIndex("MjestoPosluzivanjaID");

                    b.HasIndex("NarudzbaDetaljiID");

                    b.HasIndex("StatusNarudzbeID");

                    b.ToTable("Narudzba");
                });

            modelBuilder.Entity("SmartRestaurant.Model.NarudzbaDetalji", b =>
                {
                    b.Property<int>("NarudzbaDetaljiID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cijena");

                    b.Property<string>("Količina");

                    b.Property<bool>("Placena");

                    b.HasKey("NarudzbaDetaljiID");

                    b.ToTable("NarudzbaDetalji");
                });

            modelBuilder.Entity("SmartRestaurant.Model.NarudzbaProizvod", b =>
                {
                    b.Property<int>("NarudzbaProizvodID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NarudzbaID");

                    b.Property<int>("ProizvodID");

                    b.HasKey("NarudzbaProizvodID");

                    b.HasIndex("NarudzbaID");

                    b.HasIndex("ProizvodID");

                    b.ToTable("NarudzbaProizvod");
                });

            modelBuilder.Entity("SmartRestaurant.Model.PodKategorijeProizvoda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KategorijaProizvodaID");

                    b.Property<string>("Naziv");

                    b.HasKey("ID");

                    b.HasIndex("KategorijaProizvodaID");

                    b.ToTable("PodKategorijeProizvoda");
                });

            modelBuilder.Entity("SmartRestaurant.Model.Proizvod", b =>
                {
                    b.Property<int>("ProizvodID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivan");

                    b.Property<double>("Cijena");

                    b.Property<DateTime>("IstekRoka");

                    b.Property<int>("JedinicaKolicineID");

                    b.Property<double>("Količina");

                    b.Property<double>("NabavnaCijena");

                    b.Property<string>("Naziv");

                    b.Property<int>("PodKategorijeProizvodaID");

                    b.Property<int>("ProizvodDetaljiID");

                    b.Property<int>("SkladisteID");

                    b.Property<byte[]>("Slika");

                    b.HasKey("ProizvodID");

                    b.HasIndex("JedinicaKolicineID");

                    b.HasIndex("PodKategorijeProizvodaID");

                    b.HasIndex("ProizvodDetaljiID");

                    b.HasIndex("SkladisteID");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("SmartRestaurant.Model.ProizvodDetalji", b =>
                {
                    b.Property<int>("ProizvodDetaljiID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KolicinaNaSkladistu");

                    b.Property<string>("Opis");

                    b.HasKey("ProizvodDetaljiID");

                    b.ToTable("ProizvodDetalji");
                });

            modelBuilder.Entity("SmartRestaurant.Model.Skladiste", b =>
                {
                    b.Property<int>("SkladisteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivSkladista");

                    b.HasKey("SkladisteID");

                    b.ToTable("Skladiste");
                });

            modelBuilder.Entity("SmartRestaurant.Model.StatusNarudzbe", b =>
                {
                    b.Property<int>("StatusNarudzbeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivStatusa");

                    b.HasKey("StatusNarudzbeID");

                    b.ToTable("StatusNarudzbe");
                });

            modelBuilder.Entity("SmartRestaurant.Model.Uloge", b =>
                {
                    b.Property<int>("UlogaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazivUloge");

                    b.HasKey("UlogaID");

                    b.ToTable("Uloge");
                });

            modelBuilder.Entity("SmartRestaurant.Model.KorisnikNarudzba", b =>
                {
                    b.HasOne("SmartRestaurant.Model.Korisnici", "Korisnici")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartRestaurant.Model.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartRestaurant.Model.KorisnikOcjena", b =>
                {
                    b.HasOne("SmartRestaurant.Model.Korisnici", "Korisnici")
                        .WithMany()
                        .HasForeignKey("KorisniciID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartRestaurant.Model.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartRestaurant.Model.KorisnikUloga", b =>
                {
                    b.HasOne("SmartRestaurant.Model.Korisnici", "Korisnici")
                        .WithMany()
                        .HasForeignKey("KorisniciID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartRestaurant.Model.Uloge", "Uloge")
                        .WithMany()
                        .HasForeignKey("UlogeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartRestaurant.Model.Narudzba", b =>
                {
                    b.HasOne("SmartRestaurant.Model.MjestoPosluzivanja", "MjestoPosluzivanja")
                        .WithMany()
                        .HasForeignKey("MjestoPosluzivanjaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartRestaurant.Model.NarudzbaDetalji", "NarudzbaDetalji")
                        .WithMany()
                        .HasForeignKey("NarudzbaDetaljiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartRestaurant.Model.StatusNarudzbe", "StatusNarudzbe")
                        .WithMany()
                        .HasForeignKey("StatusNarudzbeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartRestaurant.Model.NarudzbaProizvod", b =>
                {
                    b.HasOne("SmartRestaurant.Model.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartRestaurant.Model.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartRestaurant.Model.PodKategorijeProizvoda", b =>
                {
                    b.HasOne("SmartRestaurant.Model.KategorijaProizvoda", "KategorijaProizvoda")
                        .WithMany()
                        .HasForeignKey("KategorijaProizvodaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartRestaurant.Model.Proizvod", b =>
                {
                    b.HasOne("SmartRestaurant.Model.JedinicaKolicine", "JedinicaKolicine")
                        .WithMany()
                        .HasForeignKey("JedinicaKolicineID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartRestaurant.Model.PodKategorijeProizvoda", "PodKategorijeProizvoda")
                        .WithMany()
                        .HasForeignKey("PodKategorijeProizvodaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartRestaurant.Model.ProizvodDetalji", "ProizvodDetalji")
                        .WithMany()
                        .HasForeignKey("ProizvodDetaljiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartRestaurant.Model.Skladiste", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
